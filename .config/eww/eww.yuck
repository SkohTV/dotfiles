;; Define window basis

(defwindow bar
  :windowtype "normal"
  :wm-ignore true
  :anchor "top"
  :geometry (geometry
    :width "100%"
    :height "3%")
  (bar_layout))



;; Create widgets

(defwidget _distro []
  (eventbox
  :onclick { distro_click==true ?
    "scripts/pop.sh && eww update distro_click=false" :
    "scripts/pop.sh && eww update distro_click=true"
  }
  :class {_notif=="" ? distro_click==true ? "distro_on" : "distro_off" : "distro_noti"}
    (label :xalign 0.4 :yalign 0.5 :class "distro" :text "󱄅"))) ;; 󱄅

(defwidget _time []
  (label :class "time" :text {time}))

(defwidget _battery []
  (label :class "battery" :text "${battery.state}  ${battery.value}%"))

(defwidget _cpu []
  (label :class "cpu" :text "   ${cpu}%"))

(defwidget _ram []
  (label :class "ram" :text "   ${ram}GiB"))

(defwidget _temp []
  (label :class "temp" :text "  ${temp}°C"))

(defwidget _cava []
  (label :class "cava" :text "${cava}"))

(defwidget _light []
  (label :class "light" :text "󰖨  ${brightness.hundred}"))

(defwidget _sound []
  (label :class "sound" :text "${volume.state}  ${volume.value}"))

(defwidget _wifi []
  (label :class "wifi" :text "${wifi.state}  ${wifi.value}"))

(defwidget _workspaces []
  (box :class "workspaces"
    (box :class "w1" 
      (eventbox :onclick "bspc desktop -f 1" (label  :text {workspace==1 ? " 󰪥 " : "  "})))
    (box :class "w2" 
      (eventbox :onclick "bspc desktop -f 2" (label  :text {workspace==2 ? " 󰪥 " : "  "})))
    (box :class "w3" 
      (eventbox :onclick "bspc desktop -f 3" (label  :text {workspace==3 ? " 󰪥 " : "  "})))
    (box :class "w4" 
      (eventbox :onclick "bspc desktop -f 4" (label  :text {workspace==4 ? " 󰪥 " : "  "})))
    (box :class "w5" 
      (eventbox :onclick "bspc desktop -f 5" (label  :text {workspace==5 ? " 󰪥 " : "  "})))
    (box :class "w6" 
      (eventbox :onclick "bspc desktop -f 6" (label  :text {workspace==6 ? " 󰪥 " : "  "})))
    (box :class "w7" 
      (eventbox :onclick "bspc desktop -f 7" (label  :text {workspace==7 ? " 󰪥 " : "  "})))
    (box :class "w8" 
      (eventbox :onclick "bspc desktop -f 8" (label  :text {workspace==8 ? " 󰪥 " : "  "})))
    (box :class "w9" 
      (eventbox :onclick "bspc desktop -f 9" (label  :text {workspace==9 ? " 󰪥 " : "  "})))
    (box :class "w0" 
      (eventbox :onclick "bspc desktop -f 0" (label  :text {workspace==0 ? " 󰪥 " : "  "})))
    )
  )




;; Glue together

(defwidget bar_layout []
  (box 
    (box :class "left"
      :space-evenly "false"
      :halign "start"
      (box :class "grp1"
        (_distro)
      )
      (box :class "grp2"
        (_cpu)
        (_ram)
        (_temp)
      )
      (box :class "grp3"
        (_cava)
      )
    )
    (box :class "center"
      :space-evenly "false"
      :halign "center"
      (_workspaces)
    )
    (box :class "right"
      :space-evenly "false"
      :halign "end"
      (box :class "grp1"
        (_battery)
      )
      (box :class "grp2"
        (box 
          (_light)
          (_sound)
        )
      )
      (box :class "grp3"
        (_wifi)
      )
      (box :class "grp4"
        (_time)
      )
    )
  )
)



;; Get values

(defvar distro_click false)

(defpoll time
  :interval "1s"
  `scripts/time.sh &`)

(defpoll battery
  :interval "1s"
  `scripts/battery.sh &`)

(defpoll cpu
  :interval "1s"
  `scripts/cpu.sh &`)

(defpoll ram
  :interval "1s"
  `scripts/ram.sh &`)

(defpoll temp
  :interval "1s"
  `scripts/temp.sh &`)

(defpoll workspace
  :interval "0.1s"
  `scripts/workspace.sh &`)

(defpoll wifi
  :interval "1s"
  `scripts/wifi.sh &`)

(defpoll volume
  :interval "0.2s"
  `scripts/volume.sh &`)

(defpoll brightness
  :interval "0.2s"
  `scripts/brightness.sh`)

(deflisten cava
  `scripts/cava.sh`)





;; -------------------------------------------------------------------------;;
;;                          BRIGHTNESS & SOUND                              ;;
;; -------------------------------------------------------------------------;;



;; Define window basis

(defwindow bar_brightsound
  :windowtype "normal"
  :wm-ignore true
  :geometry (geometry
    :anchor "top right"
    :y "4%"
    :x "-2%"
    :width "5%"
    :height "15%")
  (brightsound_layout))



;; Glue together

(defwidget brightsound_layout []
  (box :space-evenly false
    (box :class "bright_sound"
      (_set_bright)
      (_set_sound)
    )
      (box :orientation "v" :space-evenly false :class "cal_wifi"
        (_calendar)
        (_wifi_details))
  )
)


(defwidget _set_bright [] 
  (box :class "_set_bright" :orientation "v" :space-evenly false
    (scale
      :value "${brightness.twenty}"
      :onchange "scripts/set_bright.sh {} &"
      :orientation "v"
      :flipped true
      :min 6
      :max 40)
      (button
        :class "bright"
        :onclick "scripts/button_bright.sh"
        (label :yalign 0.5 :xalign 0.4 :text ""))))

(defwidget _set_sound []
  (box :class { volume.state_raw=="no" ? "_set_sound_active" : "_set_sound_inactive" } :orientation "v" :space-evenly false
    (scale
      :value "${volume.value}"
      :onchange "scripts/set_sound.sh {} &"
      :orientation "v"
      :flipped true
      :active { volume.state_raw=="no" ? true : false }
      :min 0
      :max 101)
      (button
        :class { volume.state_raw=="no" ? "sound_on" : "sound_off" }
        :onclick "scripts/button_sound.sh"
        (label :yalign 0.5 :xalign 0.4 :text {volume.state_raw=="no" ? "󰕾" : "󰝟"}))))

(defwidget _calendar []
  (calendar
    :day {_day}
    :month {_month}
    :year {_year}))

(defwidget _wifi_details []
  (box :orientation "v" :class "_wifi_details"
    (label :justify "right" :xalign 1 :text "
${_wifi_details.bars}    ${_wifi_details.ssid}
${_wifi_details.bssid}
${_wifi_details.rate}
  0   |   0 
")))




(defpoll _wifi_details
  :interval "0.2s"
  `scripts/wifi_details.sh &`)

(defpoll _day
  :interval "5m"
  `date +'%d' &`)

(defpoll _month
  :interval "5m"
  `date +'%m' &`)

(defpoll _year
  :interval "5m"
  `date +'%Y &`)






;; -------------------------------------------------------------------------;;
;;                             NOTIFICATIONS                                ;;
;; -------------------------------------------------------------------------;;



(defwindow bar_left
  :windowtype "normal"
  :wm-ignore true
  :geometry (geometry
    :anchor "top left"
    :y "4%"
    :x "0.5%"
    :width "5%"
    :height "15%")
  (bar_left_layout))

(defwidget bar_left_layout []
  (box :orientation "v" :space-evenly false
    (_toolbox)
    (_notif_box))
)

(defwidget _toolbox []
  (box :class "toolbox"
    (button
      (label :text "a"))
    (button
      (label :text "b"))
    (button
      (label :text "c"))
    (button
      (label :text "d"))
  )
)

(defwidget _notif_box []
  (box :orientation "v" :space-evenly false :width 200 :class "notif_box"
    (box :space-evenly true
      (box)
      (button :class "reset_notif" :onclick "scripts/notifications.sh clear"
        (label :xalign 0.45 :yalign 0.5 :text ""))
      (box)
    )
    (label
      :xalign {_notif=="" ? 0.5 : 0}
      :yalign 0
      :wrap true
      :text {_notif=="" ? "The void..." : "${_notif}"}))
)



(defpoll _notif
  :interval "1s"
  `scripts/notifications.sh get &`)