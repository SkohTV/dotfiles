;; wmctrl -m | __grep -oP 'Name: \K\w+'


;; Includes

(include "pollers.yuck")
(include "variables.yuck")
(include "listeners.yuck")


;; Define window basis

(defwindow bar
  ;;:wm-ignore true
  :windowtype "dock"
  :anchor "top"
  :geometry (geometry
    :y "0px"
    :width "100%")
  (bar_layout)
)



;; Create widgets

(defwidget _distro []
  (eventbox
  :class "distro"
  :onhover ""
  :onhoverlost ""
    (label :xalign 0.4 :yalign 0.5 :text "󱄅")))

(defwidget _time []
  (eventbox
    :class "time"
    :onhover "eww open noti_calendar"
    :onhoverlost "eww close noti_calendar"
    (label :text {time})))

(defwidget _battery []
  (eventbox
    :class "battery"
    :onhover "eww open noti_battery"
    :onhoverlost "eww close noti_battery"
  (label :class "battery" :text "${battery.state}  ${battery.value}%")))

(defwidget _cpu []
  (label :class "cpu" :text "   ${cpu}%"))

(defwidget _ram []
  (label :class "ram" :text "   ${ram}GiB"))

(defwidget _temp []
  (label :class "temp" :text "  ${temp}°C"))

(defwidget _cava []
  (label :class "cava" :text "${cava}")
)

(defwidget _light []
  ;;(label :class "light" :text "󰖨  ${brightness}"))
  (label :class "light" :text "  ${brightness}"))

(defwidget _sound []
  (label :class "sound" :text "${volume.state}  ${volume.value}"))

(defwidget _wifi []
  (eventbox
    :onhover "eww open noti_wifi"
    :onhoverlost "eww close noti_wifi"
    (box :space-evenly false
      (label :class "wifi"
        :text "${wifi.state}  ${wifi.value}")
      (label :class "ssh_ping" :visible { _ssh=="" ? false : true }
        :text "󱘖 "))
  )
)

(defwidget _bluetooth []
  (label :text "󰂯 1"))


(defwidget _workspaces []
  (box :class "workspaces"
    (box :class "w1" 
      (eventbox :onclick "i3-msg workspace number 1" (label  :text {workspace==1 ? " 󰪥 " : "  "})))
    (box :class "w2" 
      (eventbox :onclick "i3-msg workspace number 2" (label  :text {workspace==2 ? " 󰪥 " : "  "})))
    (box :class "w3" 
      (eventbox :onclick "i3-msg workspace number 3" (label  :text {workspace==3 ? " 󰪥 " : "  "})))
    (box :class "w4" 
      (eventbox :onclick "i3-msg workspace number 4" (label  :text {workspace==4 ? " 󰪥 " : "  "})))
    (box :class "w5" 
      (eventbox :onclick "i3-msg workspace number 5" (label  :text {workspace==5 ? " 󰪥 " : "  "})))
    (box :class "w6" 
      (eventbox :onclick "i3-msg workspace number 6" (label  :text {workspace==6 ? " 󰪥 " : "  "})))
    (box :class "w7" 
      (eventbox :onclick "i3-msg workspace number 7" (label  :text {workspace==7 ? " 󰪥 " : "  "})))
    (box :class "w8" 
      (eventbox :onclick "i3-msg workspace number 8" (label  :text {workspace==8 ? " 󰪥 " : "  "})))
    (box :class "w9" 
      (eventbox :onclick "i3-msg workspace number 9" (label  :text {workspace==9 ? " 󰪥 " : "  "})))
    (box :class "w0" 
      (eventbox :onclick "i3-msg workspace number 10" (label  :text {workspace==10 ? " 󰪥 " : "  "})))
    )
  )




;; Glue together

(defwidget bar_layout []
  (box :class "top_bar"
    (box :class "left"
      :space-evenly "false"
      :halign "start"
      (box :class "grp1"
        (_distro)
      )
      (box :class "grp2"
        (_cpu)
        (_ram)
        (_temp)
      )
      (box :class "grp3"
        (_cava)
      )
    )
    (box :class "center"
      :space-evenly "false"
      :halign "center"
      (_workspaces)
    )
    (box :class "right"
      :space-evenly "false"
      :halign "end"
      (box :class "grp1" :space-evenly false
        (_battery)
        (_bluetooth)
      )
      (eventbox
        :class "time"
        :onhover { brightsound_click==false ? "eww open noti_brightsound" : "" }
        :onhoverlost { brightsound_click==false ? "eww close noti_brightsound" : "" }
        :onclick { brightsound_click==true ? "eww close noti_brightsound && eww update brightsound_click=false" : "eww open noti_brightsound && eww update brightsound_click=true" }
        (box :class { brightsound_click==true ? "brightsound_select" : "brightsound_no_select" }
          (_light)
          (_sound)
        )
      )
      (box :class "grp3"
        (_wifi)
      )
      (box :class "grp4"
        (_time)
      )
    )
  )
)



;; -------------------------------------------------------------------------;;
;;                               NOTIF BAR                                  ;;
;; -------------------------------------------------------------------------;;



;; Define window basis

(defwindow noti_calendar
  :monitor 0
  :wm-ignore true
  :windowtype "normal"
  :anchor "top"
  :geometry (geometry
    :x "0%"
    :y "3%"
    :anchor "top right"
  )
  (_noti_calendar))

(defwidget _noti_calendar []
  (box :class "inside"
    (calendar
      :day {_day}
      :month {_month}
      :year {_year})))



(defwindow noti_wifi
  :monitor 0
  :wm-ignore true
  :windowtype "normal"
  :anchor "top"
  :geometry (geometry
    :x "9%"
    :y "3%"
    :anchor "top right"
  )
  (_noti_wifi))

(defwidget _noti_wifi []
  (box :orientation "v" :class "noti_wifi" :space-evenly false
    (box :class "inside" :orientation "v" :space-evenly false
      (label :class "first" :xalign 1 :text "${_wifi_details.bars}    ${_wifi_details.ssid}") 
      (label :xalign 1 :text "${_wifi_details.bssid}") 
      (label :xalign 1 :text "${_wifi_details.rate}")
      (label :class "last" :xalign 1 :text "  0   |   0  "))
    (box :orientation "v" :class "inside" :visible { _ssh=="" ? false : true }
      (label :class "second" :xalign 0.5 :text "SSH CLIENTS")
      (label :class "last" :xalign 0 :text "${_ssh}"))
  )
)


(defwindow noti_brightsound
  :monitor 0
  :wm-ignore true
  :windowtype "normal"
  :anchor "top"
  :geometry (geometry
    :x "12%"
    :y "3%"
    :anchor "top right"
  )
  (_noti_brightsound))

(defwidget _noti_brightsound []
  (box :space-evenly false
    (box :class "inside"
      (_set_bright)
      (_set_sound)
    )
    (box :class "empty" :width { round(8 * strlength(wifi.value), 0) + (_ssh=="" ? 0 : 17) })
  )
)


(defwidget _set_bright [] 
  (box :class "_set_bright" :orientation "v" :space-evenly false
    (scale
      :value "${brightness}"
      :onchange "brightnessctl set {}% &"
      :orientation "v"
      :flipped true
      :min 1
      :max 101)
      (button
        :class "bright"
        :onclick "sh scripts/button_bright.sh"
        (label :yalign 0.5 :xalign 0.4 :text ""))))

(defwidget _set_sound []
  (box :class { volume.state_raw=="no" ? "_set_sound_active" : "_set_sound_inactive" } :orientation "v" :space-evenly false
    (scale
      :value "${volume.value}"
      :onchange "sh scripts/set_sound.sh {} &"
      :orientation "v"
      :flipped true
      :min  00 
      :max 101)
      (button
        :class { volume.state_raw=="no" ? "sound_on" : "sound_off" }
        :onclick "sh scripts/button_sound.sh"
        (label :yalign 0.5 :xalign 0.4 :text {volume.state_raw=="no" ? "󰕾" : "󰝟"}))))


(defwindow noti_battery
  :monitor 0
  :wm-ignore true
  :windowtype "normal"
  :anchor "top"
  :geometry (geometry
    :x "17%"
    :y "3%"
    :anchor "top right"
  )
  (_noti_battery))

(defwidget _noti_battery []
  (box :space-evenly false :orientation "h" :class "_noti_battery"
    (box :class "inside" :space-evenly false :orientation "v"
      (label :justify "center" :class "first" :text {
        battery.charging=="You are fully charged !" ?
        "${battery.charging}" :
        "${battery.charging}
${battery.time}"})
    )
    (box :class "empty" :width { round(8 * strlength(wifi.value), 0) + (_ssh=="" ? 0 : 17) })
  )
)

