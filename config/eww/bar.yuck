;; Distro logo
(defwidget _distro []
  (eventbox
    :space-evenly false
    :onhover 'eww open popup_shortcuts'
    :onhoverlost 'eww close popup_shortcuts'
    (image :class "distro" :path "./imgs/nixos.png" :image-width 15)
  )
)


;; CPU, temperature, ram
(defwidget _grp_procinfo []
  (box
    :class "procinfo"
    :space-evenly false
    :spacing 10
    (label :class "cpu" :text "   ${round(EWW_CPU['avg'],2)}%")
    (label :class "temp" :text "  ${EWW_TEMPS['CORETEMP_PACKAGE_ID_0']}.0°C")
    (label :class "ram" :text "   ${round(EWW_RAM['used_mem'] / 1024 / 1024 / 1024, 2)}GiB")
  )
)


;; Cava bars
(defwidget _cava []
  (button
    :class "cava"
    :space-evenly false
    :onclick 'eww open --toggle popup_music'
    (label :text "${listen_cava}")
  )
)


;; Workspaces
(defwidget _workspaces []
  (box :class "workspaces"
    (button :onclick 'hyprctl dispatch workspace 1'  :class "w1" (label :text {listen_workspace.all[0] ? listen_workspace.active == 1 ?  " 󰪥 " : "  " : "⚬ "}))
    (button :onclick 'hyprctl dispatch workspace 2'  :class "w2" (label :text {listen_workspace.all[1] ? listen_workspace.active == 2 ?  " 󰪥 " : "  " : "⚬ "}))
    (button :onclick 'hyprctl dispatch workspace 3'  :class "w3" (label :text {listen_workspace.all[2] ? listen_workspace.active == 3 ?  " 󰪥 " : "  " : "⚬ "}))
    (button :onclick 'hyprctl dispatch workspace 4'  :class "w4" (label :text {listen_workspace.all[3] ? listen_workspace.active == 4 ?  " 󰪥 " : "  " : "⚬ "}))
    (button :onclick 'hyprctl dispatch workspace 5'  :class "w5" (label :text {listen_workspace.all[4] ? listen_workspace.active == 5 ?  " 󰪥 " : "  " : "⚬ "}))
    (button :onclick 'hyprctl dispatch workspace 6'  :class "w6" (label :text {listen_workspace.all[5] ? listen_workspace.active == 6 ?  " 󰪥 " : "  " : "⚬ "}))
    (button :onclick 'hyprctl dispatch workspace 7'  :class "w7" (label :text {listen_workspace.all[6] ? listen_workspace.active == 7 ?  " 󰪥 " : "  " : "⚬ "}))
    (button :onclick 'hyprctl dispatch workspace 8'  :class "w8" (label :text {listen_workspace.all[7] ? listen_workspace.active == 8 ?  " 󰪥 " : "  " : "⚬ "}))
    (button :onclick 'hyprctl dispatch workspace 9'  :class "w9" (label :text {listen_workspace.all[8] ? listen_workspace.active == 9 ?  " 󰪥 " : "  " : "⚬ "}))
    (button :onclick 'hyprctl dispatch workspace 10' :class "w0" (label :text {listen_workspace.all[9] ? listen_workspace.active == 10 ? " 󰪥 " : "  " : "⚬ "}))
  )
)




;; Battery
(defwidget _battery []
  (box
    :class "battery"
    :space-evenly false
    :tooltip "${var_battery_remain}"
    (label :class "battery" :text "${
      EWW_BATTERY['BAT1'].status == 'Charging' ?
        EWW_BATTERY['BAT1'].capacity == 100 ? '󰂃' : '󰂄' :
        EWW_BATTERY['BAT1'].capacity < 10 ? '󰁺' :
        EWW_BATTERY['BAT1'].capacity < 20 ? '󰁻' :
        EWW_BATTERY['BAT1'].capacity < 30 ? '󰁼' :
        EWW_BATTERY['BAT1'].capacity < 40 ? '󰁽' :
        EWW_BATTERY['BAT1'].capacity < 50 ? '󰁾' :
        EWW_BATTERY['BAT1'].capacity < 60 ? '󰁿' :
        EWW_BATTERY['BAT1'].capacity < 70 ? '󰂀' :
        EWW_BATTERY['BAT1'].capacity < 80 ? '󰂁' :
        EWW_BATTERY['BAT1'].capacity < 90 ? '󰂂' : '󰁹'
    }  ${EWW_BATTERY['BAT1'].capacity}%")
  )
)




;; Brightness and sound
(defwidget _grp_brightsound []
  (box
    :class "inside"
    :spacing 5
    :space-evenly false
    (eventbox
      :onhover "eww update bool_bright=true"   
      :onhoverlost "eww update bool_bright=false"
      (box
        :class "${bool_night ? 'night' : 'light'}" 
        :space-evenly false
        (revealer
          :transition "slideright" 
          :reveal bool_bright
          :duration "550ms"
          (scale 
            :value var_brightness
            :onchange "brightnessctl set {}% && scripts/up_bright.sh" 
            :orientation "h" 
            :flipped true 
            :max 101
            :min 1))
        (button
          :onclick "${bool_night ?
            'pkill gammastep && eww update bool_night=false' :
            '(gammastep -O 3500 &) && eww update bool_night=true'}"
          (label :text "${bool_night ? '' : ''}  ${var_brightness - 1}")
        )
    ))
    (eventbox
      :onhover "eww update bool_sound=true"   
      :onhoverlost "eww update bool_sound=false"
      (box
        :class "${bool_mute ? 'mute_sound' : 'sound'}"
        :space-evenly false
        (revealer
          :transition "slideright" 
          :reveal bool_sound   
          :duration "550ms"
          (scale 
            :value "${var_volume.value}"
            :onchange "pamixer --set-volume {} && scripts/up_volume.sh" 
            :orientation "h" 
            :flipped true 
            :max 100
            :min 0))
        (button
          :onclick "${bool_mute ?
            'pamixer --unmute && eww update bool_mute=false' :
            'pamixer --mute && eww update bool_mute=true'}"
          (label :text "${bool_mute ? '󰝟' : var_volume.state}  ${var_volume.value}")
        )
    ))
  )
)



;; Wifi
(defwidget _grp_wifi []
  (box
    :class "wifi"
    :space-evenly false
    :spacing 5
    (label
      :class "bars"
      :text "${var_wifi.state}  ${var_wifi.value}"
    )
    (label
      :class "ssh"
      :visible { var_ssh=="" ? false : true }
      :text "󱘖 "
    )
  )
)


;; Date and time
(defwidget _time []
  (eventbox
    :space-evenly false
    :onhover 'eww open popup_time'
    :onhoverlost 'eww close popup_time'
    (label :class "time" :text {var_time})
  )
)


;; Small separator
(defwidget _separator []
  (label :text "I")
)




;; Window
(defwindow bar
  :monitor 0
  :stacking "fg"
  :anchor "top"
  :geometry (geometry
    :height "20px"
    :width "100%")
  (bar_layout)
)


;; Layout
(defwidget bar_layout []
  (box :class "top_bar"
    (box :class "left"
      :space-evenly "false"
      :halign "start"
      :spacing 7
      (_distro)
      (_separator)
      (_grp_procinfo)
      (_separator)
      (_cava)
    )
    (box :class "center"
      :space-evenly "false"
      :halign "center"
      (_workspaces)
    )
    (box :class "right"
      :space-evenly "false"
      :halign "end"
      :spacing 7
      (_battery)
      (_separator)
      (_grp_brightsound)
      (_separator)
      (_grp_wifi)
      (_separator)
      (_time)
    )
  )
)
